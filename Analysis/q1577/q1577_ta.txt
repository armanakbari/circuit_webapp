((-R1*s*(C1*L1*s**2*(R2 + R5) + R2 + R5 + s*(C1*R2*R6 + C1*R5*R6 + L1))/(C1*L1*(R1*R2 + R1*R4 + R1*R5 + R2*R3 + R2*R4 + R2*R6 + R3*R4 + R3*R5 + R4*R5 + R4*R6 + R5*R6)))/(s**3 + s**2*(C1*C2*R1*R2*R6 + C1*C2*R1*R4*R6 + C1*C2*R1*R5*R6 + C1*C2*R2*R3*R6 + C1*C2*R2*R4*R6 + C1*C2*R3*R4*R6 + C1*C2*R3*R5*R6 + C1*C2*R4*R5*R6 + C1*L1*R2 + C1*L1*R4 + C1*L1*R5 + C2*L1*R1 + C2*L1*R3 + C2*L1*R4 + C2*L1*R6)/(C1*C2*L1*R1*R2 + C1*C2*L1*R1*R4 + C1*C2*L1*R1*R5 + C1*C2*L1*R2*R3 + C1*C2*L1*R2*R4 + C1*C2*L1*R2*R6 + C1*C2*L1*R3*R4 + C1*C2*L1*R3*R5 + C1*C2*L1*R4*R5 + C1*C2*L1*R4*R6 + C1*C2*L1*R5*R6) + s*(C1*R2*R6 + C1*R4*R6 + C1*R5*R6 + C2*R1*R2 + C2*R1*R4 + C2*R1*R5 + C2*R1*R6 + C2*R2*R3 + C2*R2*R4 + C2*R2*R6 + C2*R3*R4 + C2*R3*R5 + C2*R3*R6 + C2*R4*R5 + C2*R5*R6 + L1)/(C1*C2*L1*R1*R2 + C1*C2*L1*R1*R4 + C1*C2*L1*R1*R5 + C1*C2*L1*R2*R3 + C1*C2*L1*R2*R4 + C1*C2*L1*R2*R6 + C1*C2*L1*R3*R4 + C1*C2*L1*R3*R5 + C1*C2*L1*R4*R5 + C1*C2*L1*R4*R6 + C1*C2*L1*R5*R6) + (R2 + R4 + R5 + R6)/(C1*C2*L1*R1*R2 + C1*C2*L1*R1*R4 + C1*C2*L1*R1*R5 + C1*C2*L1*R2*R3 + C1*C2*L1*R2*R4 + C1*C2*L1*R2*R6 + C1*C2*L1*R3*R4 + C1*C2*L1*R3*R5 + C1*C2*L1*R4*R5 + C1*C2*L1*R4*R6 + C1*C2*L1*R5*R6)))*1